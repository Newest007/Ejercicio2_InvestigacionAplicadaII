"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

}

"Account of a person who utilizes this application."
type User {

    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    posts:[Post]
    created_at: DateTime!
    updated_at: DateTime!
}

type Post{
  id: ID!
  user:  User!
  title: String!
  body: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Mutation {
  createUser(
    name: String @rules(apply: ["required"])
    email: String @rules(apply: ["required", "email", "unique:users,email"]),
    password: String @rules(apply: ["required"])
  
  ):User @create(model: "App\\Models\\User")

  updateUser(
    id: ID @rules(apply: ["required"])
    name: String
    email: String @rules(apply:["email"])
  ):User @update(model: "App\\Models\\User")

  deleteUser(
    id: ID! @rules(apply: ["required"])
  ):Boolean @delete(model: "App\\Models\\User")
}

